#include <iostream>
#include <string>
#include <sstream>
#include <cmath>

using namespace  std;
class Fraction {
private:
    double chislo;

public:
    // Constructors
    Fraction() : chislo(0) {}
    Fraction(double value) : chislo(value) {}
    Fraction(const string& value) {
        stringstream ss(value);
        int numerator, denominator;
        char delimiter;
        // Try parsing as fraction
        if ((ss >> numerator >> delimiter >> denominator) && delimiter == '/') {
            chislo = static_cast<double>(numerator) / denominator;
        } else { // Parse as decimal
            ss.clear(); // Clear stream state
            ss.str(value);
            if (!(ss >> chislo)) {
                chislo = NAN; // Indicate invalid input
            }
        }
    }

    // Unary increment operator
    Fraction& operator++() {
        chislo++;
        return *this;
    }

    // Postfix increment operator
    Fraction operator++(int) {
        Fraction temp(*this);
        ++(*this);
        return temp;
    }

    // Overload operators for arithmetic operations
    Fraction& operator+=(const Fraction& other) {
        chislo += other.chislo;
        return *this;
    }
    Fraction& operator-=(const Fraction& other) {
        chislo -= other.chislo;
        return *this;
    }
    Fraction& operator*=(const Fraction& other) {
        chislo *= other.chislo;
        return *this;
    }
    Fraction& operator/=(const Fraction& other) {
        chislo /= other.chislo;
        return *this;
    }

    // Print fraction
    void print() const {
        cout << chislo << endl;
    }
};

// Overload arithmetic operators for Fraction objects
Fraction operator+(Fraction f1, const Fraction& f2) {
    return f1 += f2;
}
Fraction operator-(Fraction f1, const Fraction& f2) {
    return f1 -= f2;
}
Fraction operator*(Fraction f1, const Fraction& f2) {
    return f1 *= f2;
}
Fraction operator/(Fraction f1, const Fraction& f2) {
    return f1 /= f2;
}

int main() {
    string value;
    cout << "Enter A=";
    cin >> value;

    Fraction fraction(value);

    string operation;
    cout << "Enter an operation (+, -, *, /, ++): ";
    cin >> operation;

    if (operation == "++") {
        ++fraction;
    } else {
        Fraction operand;
        cout << "Enter B=";
        cin >> value;
        operand = Fraction(value);

        if (operation == "+") {
            fraction = fraction + operand;
        } else if (operation == "-") {
            fraction = fraction - operand;
        } else if (operation == "*") {
            fraction = fraction * operand;
        } else if (operation == "/") {
            fraction = fraction / operand;
        } else {
            cout << "Invalid operation!";
            return 1;
        }
    }

    cout << "Result: ";
    fraction.print();

    return 0;
}
